{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"@react-navigation/native","data":{"isAsync":false}},{"name":"./TouchableItem","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[9], \"@react-navigation/core\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[10], \"@react-navigation/native\");\n\n  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./TouchableItem\"));\n\n  var DrawerNavigatorItems = function (_React$Component) {\n    (0, _inherits2.default)(DrawerNavigatorItems, _React$Component);\n\n    function DrawerNavigatorItems() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerNavigatorItems);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DrawerNavigatorItems)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this._getActiveTintColor = function () {\n        var activeTintColor = _this.props.activeTintColor;\n\n        if (!activeTintColor) {\n          return;\n        } else if (typeof activeTintColor === 'string') {\n          return activeTintColor;\n        }\n\n        return activeTintColor[_this.context];\n      };\n\n      _this._getInactiveTintColor = function () {\n        var inactiveTintColor = _this.props.inactiveTintColor;\n\n        if (!inactiveTintColor) {\n          return;\n        } else if (typeof inactiveTintColor === 'string') {\n          return inactiveTintColor;\n        }\n\n        return inactiveTintColor[_this.context];\n      };\n\n      _this._getActiveBackgroundColor = function () {\n        var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n        if (!activeBackgroundColor) {\n          return;\n        } else if (typeof activeBackgroundColor === 'string') {\n          return activeBackgroundColor;\n        }\n\n        return activeBackgroundColor[_this.context];\n      };\n\n      _this._getInactiveBackgroundColor = function () {\n        var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n        if (!inactiveBackgroundColor) {\n          return;\n        } else if (typeof inactiveBackgroundColor === 'string') {\n          return inactiveBackgroundColor;\n        }\n\n        return inactiveBackgroundColor[_this.context];\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerNavigatorItems, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            items = _this$props.items,\n            activeItemKey = _this$props.activeItemKey,\n            getLabel = _this$props.getLabel,\n            renderIcon = _this$props.renderIcon,\n            onItemPress = _this$props.onItemPress,\n            itemsContainerStyle = _this$props.itemsContainerStyle,\n            itemStyle = _this$props.itemStyle,\n            labelStyle = _this$props.labelStyle,\n            activeLabelStyle = _this$props.activeLabelStyle,\n            inactiveLabelStyle = _this$props.inactiveLabelStyle,\n            iconContainerStyle = _this$props.iconContainerStyle,\n            drawerPosition = _this$props.drawerPosition;\n\n        var activeTintColor = this._getActiveTintColor();\n\n        var inactiveTintColor = this._getInactiveTintColor();\n\n        var activeBackgroundColor = this._getActiveBackgroundColor();\n\n        var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.container, itemsContainerStyle]\n        }, items.map(function (route, index) {\n          var _ref;\n\n          var focused = activeItemKey === route.key;\n          var color = focused ? activeTintColor : inactiveTintColor;\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var scene = {\n            route: route,\n            index: index,\n            focused: focused,\n            tintColor: color\n          };\n          var icon = renderIcon(scene);\n          var label = getLabel(scene);\n          var accessibilityLabel = typeof label === 'string' ? label : undefined;\n          var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n          return _react.default.createElement(_TouchableItem.default, {\n            key: route.key,\n            accessible: true,\n            accessibilityLabel: accessibilityLabel,\n            onPress: function onPress() {\n              onItemPress({\n                route: route,\n                focused: focused\n              });\n            },\n            delayPressIn: 0\n          }, _react.default.createElement(_native.SafeAreaView, {\n            style: [{\n              backgroundColor: backgroundColor\n            }, styles.item, itemStyle],\n            forceInset: (_ref = {}, (0, _defineProperty2.default)(_ref, drawerPosition, 'always'), (0, _defineProperty2.default)(_ref, drawerPosition === 'left' ? 'right' : 'left', 'never'), (0, _defineProperty2.default)(_ref, \"vertical\", 'never'), _ref)\n          }, icon ? _react.default.createElement(_reactNative.View, {\n            style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle]\n          }, icon) : null, typeof label === 'string' ? _react.default.createElement(_reactNative.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle, extraLabelStyle]\n          }, label) : label));\n        }));\n      }\n    }]);\n    return DrawerNavigatorItems;\n  }(_react.default.Component);\n\n  DrawerNavigatorItems.contextType = _core.ThemeContext;\n  DrawerNavigatorItems.defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff'\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)'\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)'\n    },\n    inactiveBackgroundColor: 'transparent'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      paddingVertical: 4\n    },\n    item: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    icon: {\n      marginHorizontal: 16,\n      width: 24,\n      alignItems: 'center'\n    },\n    inactiveIcon: {\n      opacity: 0.62\n    },\n    label: {\n      margin: 16,\n      fontWeight: 'bold'\n    }\n  });\n\n  var _default = DrawerNavigatorItems;\n  exports.default = _default;\n});","map":[[21,0,1,0],[23,0,2,0],[25,0,3,0],[27,0,4,0],[29,0,5,0],[31,6,10,6,"DrawerNavigatorItems"],[31,26],[47,12,13,2,"_getActiveTintColor"],[47,31],[47,34,13,24],[47,46,13,30],[48,0,13,30],[48,12,14,10,"activeTintColor"],[48,27,13,30],[48,30,14,30],[48,36,14,35,"props"],[48,41,13,30],[48,42,14,10,"activeTintColor"],[48,57,13,30],[50,0,15,4],[50,12,15,8],[50,13,15,9,"activeTintColor"],[50,28,15,4],[50,30,15,26],[51,0,16,6],[52,0,17,5],[52,9,15,4],[52,15,17,11],[52,19,17,15],[52,26,17,22,"activeTintColor"],[52,41,17,15],[52,46,17,42],[52,54,17,11],[52,56,17,52],[53,0,18,6],[53,17,18,13,"activeTintColor"],[53,32,18,6],[54,0,19,5],[56,0,21,4],[56,15,21,11,"activeTintColor"],[56,30,21,26],[56,31,21,27],[56,37,21,32,"context"],[56,44,21,26],[56,45,21,4],[57,0,22,3],[57,7],[59,12,24,2,"_getInactiveTintColor"],[59,33],[59,36,24,26],[59,48,24,32],[60,0,24,32],[60,12,25,10,"inactiveTintColor"],[60,29,24,32],[60,32,25,32],[60,38,25,37,"props"],[60,43,24,32],[60,44,25,10,"inactiveTintColor"],[60,61,24,32],[62,0,26,4],[62,12,26,8],[62,13,26,9,"inactiveTintColor"],[62,30,26,4],[62,32,26,28],[63,0,27,6],[64,0,28,5],[64,9,26,4],[64,15,28,11],[64,19,28,15],[64,26,28,22,"inactiveTintColor"],[64,43,28,15],[64,48,28,44],[64,56,28,11],[64,58,28,54],[65,0,29,6],[65,17,29,13,"inactiveTintColor"],[65,34,29,6],[66,0,30,5],[68,0,32,4],[68,15,32,11,"inactiveTintColor"],[68,32,32,28],[68,33,32,29],[68,39,32,34,"context"],[68,46,32,28],[68,47,32,4],[69,0,33,3],[69,7],[71,12,35,2,"_getActiveBackgroundColor"],[71,37],[71,40,35,30],[71,52,35,36],[72,0,35,36],[72,12,36,10,"activeBackgroundColor"],[72,33,35,36],[72,36,36,36],[72,42,36,41,"props"],[72,47,35,36],[72,48,36,10,"activeBackgroundColor"],[72,69,35,36],[74,0,37,4],[74,12,37,8],[74,13,37,9,"activeBackgroundColor"],[74,34,37,4],[74,36,37,32],[75,0,38,6],[76,0,39,5],[76,9,37,4],[76,15,39,11],[76,19,39,15],[76,26,39,22,"activeBackgroundColor"],[76,47,39,15],[76,52,39,48],[76,60,39,11],[76,62,39,58],[77,0,40,6],[77,17,40,13,"activeBackgroundColor"],[77,38,40,6],[78,0,41,5],[80,0,43,4],[80,15,43,11,"activeBackgroundColor"],[80,36,43,32],[80,37,43,33],[80,43,43,38,"context"],[80,50,43,32],[80,51,43,4],[81,0,44,3],[81,7],[83,12,46,2,"_getInactiveBackgroundColor"],[83,39],[83,42,46,32],[83,54,46,38],[84,0,46,38],[84,12,47,10,"inactiveBackgroundColor"],[84,35,46,38],[84,38,47,38],[84,44,47,43,"props"],[84,49,46,38],[84,50,47,10,"inactiveBackgroundColor"],[84,73,46,38],[86,0,48,4],[86,12,48,8],[86,13,48,9,"inactiveBackgroundColor"],[86,36,48,4],[86,38,48,34],[87,0,49,6],[88,0,50,5],[88,9,48,4],[88,15,50,11],[88,19,50,15],[88,26,50,22,"inactiveBackgroundColor"],[88,49,50,15],[88,54,50,50],[88,62,50,11],[88,64,50,60],[89,0,51,6],[89,17,51,13,"inactiveBackgroundColor"],[89,40,51,6],[90,0,52,5],[92,0,54,4],[92,15,54,11,"inactiveBackgroundColor"],[92,38,54,34],[92,39,54,35],[92,45,54,40,"context"],[92,52,54,34],[92,53,54,4],[93,0,55,3],[93,7],[100,31,57,11],[101,0,57,11],[101,26,71,8],[101,31,71,13,"props"],[101,36,57,11],[102,0,57,11],[102,12,59,6,"items"],[102,17,57,11],[102,32,59,6,"items"],[102,37,57,11],[103,0,57,11],[103,12,60,6,"activeItemKey"],[103,25,57,11],[103,40,60,6,"activeItemKey"],[103,53,57,11],[104,0,57,11],[104,12,61,6,"getLabel"],[104,20,57,11],[104,35,61,6,"getLabel"],[104,43,57,11],[105,0,57,11],[105,12,62,6,"renderIcon"],[105,22,57,11],[105,37,62,6,"renderIcon"],[105,47,57,11],[106,0,57,11],[106,12,63,6,"onItemPress"],[106,23,57,11],[106,38,63,6,"onItemPress"],[106,49,57,11],[107,0,57,11],[107,12,64,6,"itemsContainerStyle"],[107,31,57,11],[107,46,64,6,"itemsContainerStyle"],[107,65,57,11],[108,0,57,11],[108,12,65,6,"itemStyle"],[108,21,57,11],[108,36,65,6,"itemStyle"],[108,45,57,11],[109,0,57,11],[109,12,66,6,"labelStyle"],[109,22,57,11],[109,37,66,6,"labelStyle"],[109,47,57,11],[110,0,57,11],[110,12,67,6,"activeLabelStyle"],[110,28,57,11],[110,43,67,6,"activeLabelStyle"],[110,59,57,11],[111,0,57,11],[111,12,68,6,"inactiveLabelStyle"],[111,30,57,11],[111,45,68,6,"inactiveLabelStyle"],[111,63,57,11],[112,0,57,11],[112,12,69,6,"iconContainerStyle"],[112,30,57,11],[112,45,69,6,"iconContainerStyle"],[112,63,57,11],[113,0,57,11],[113,12,70,6,"drawerPosition"],[113,26,57,11],[113,41,70,6,"drawerPosition"],[113,55,57,11],[115,0,73,4],[115,12,73,10,"activeTintColor"],[115,27,73,25],[115,30,73,28],[115,35,73,33,"_getActiveTintColor"],[115,54,73,28],[115,56,73,4],[117,0,74,4],[117,12,74,10,"inactiveTintColor"],[117,29,74,27],[117,32,74,30],[117,37,74,35,"_getInactiveTintColor"],[117,58,74,30],[117,60,74,4],[119,0,75,4],[119,12,75,10,"activeBackgroundColor"],[119,33,75,31],[119,36,75,34],[119,41,75,39,"_getActiveBackgroundColor"],[119,66,75,34],[119,68,75,4],[121,0,76,4],[121,12,76,10,"inactiveBackgroundColor"],[121,35,76,33],[121,38,76,36],[121,43,76,41,"_getInactiveBackgroundColor"],[121,70,76,36],[121,72,76,4],[123,0,78,4],[123,15,79,6],[123,44,79,7],[123,61,79,6],[124,0,79,12],[124,10,79,12],[124,15,79,17],[124,17,79,19],[124,18,79,20,"styles"],[124,24,79,26],[124,25,79,27,"container"],[124,34,79,19],[124,36,79,38,"itemsContainerStyle"],[124,55,79,19],[125,0,79,6],[125,11,80,9,"items"],[125,16,80,14],[125,17,80,15,"map"],[125,20,80,9],[125,21,80,19],[125,31,80,20,"route"],[125,36,80,19],[125,38,80,27,"index"],[125,43,80,19],[125,45,80,37],[126,0,80,37],[128,0,81,10],[128,14,81,16,"focused"],[128,21,81,23],[128,24,81,26,"activeItemKey"],[128,37,81,39],[128,42,81,44,"route"],[128,47,81,49],[128,48,81,50,"key"],[128,51,81,10],[129,0,82,10],[129,14,82,16,"color"],[129,19,82,21],[129,22,82,24,"focused"],[129,29,82,31],[129,32,82,34,"activeTintColor"],[129,47,82,31],[129,50,82,52,"inactiveTintColor"],[129,67,82,10],[130,0,83,10],[130,14,83,16,"backgroundColor"],[130,29,83,31],[130,32,83,34,"focused"],[130,39,83,41],[130,42,84,14,"activeBackgroundColor"],[130,63,83,41],[130,66,85,14,"inactiveBackgroundColor"],[130,89,83,10],[131,0,86,10],[131,14,86,16,"scene"],[131,19,86,21],[131,22,86,24],[132,0,86,26,"route"],[132,12,86,26,"route"],[132,17,86,31],[132,19,86,26,"route"],[132,24,86,24],[133,0,86,33,"index"],[133,12,86,33,"index"],[133,17,86,38],[133,19,86,33,"index"],[133,24,86,24],[134,0,86,40,"focused"],[134,12,86,40,"focused"],[134,19,86,47],[134,21,86,40,"focused"],[134,28,86,24],[135,0,86,49,"tintColor"],[135,12,86,49,"tintColor"],[135,21,86,58],[135,23,86,60,"color"],[136,0,86,24],[136,11,86,10],[137,0,87,10],[137,14,87,16,"icon"],[137,18,87,20],[137,21,87,23,"renderIcon"],[137,31,87,33],[137,32,87,34,"scene"],[137,37,87,33],[137,38,87,10],[138,0,88,10],[138,14,88,16,"label"],[138,19,88,21],[138,22,88,24,"getLabel"],[138,30,88,32],[138,31,88,33,"scene"],[138,36,88,32],[138,37,88,10],[139,0,89,10],[139,14,89,16,"accessibilityLabel"],[139,32,89,34],[139,35,90,12],[139,42,90,19,"label"],[139,47,90,12],[139,52,90,29],[139,60,90,12],[139,63,90,40,"label"],[139,68,90,12],[139,71,90,48,"undefined"],[139,80,89,10],[140,0,91,10],[140,14,91,16,"extraLabelStyle"],[140,29,91,31],[140,32,91,34,"focused"],[140,39,91,41],[140,42,92,14,"activeLabelStyle"],[140,58,91,41],[140,61,93,14,"inactiveLabelStyle"],[140,79,91,10],[141,0,94,10],[141,17,95,12],[141,46,95,13],[141,68,95,12],[142,0,96,14],[142,12,96,14],[142,15,96,17],[142,17,96,19,"route"],[142,22,96,24],[142,23,96,25,"key"],[142,26,95,12],[143,0,97,14],[143,12,97,14],[143,22,97,24],[143,28,95,12],[144,0,98,14],[144,12,98,14],[144,30,98,32],[144,32,98,34,"accessibilityLabel"],[144,50,95,12],[145,0,99,14],[145,12,99,14],[145,19,99,21],[145,21,99,23],[145,40,99,29],[146,0,100,16,"onItemPress"],[146,14,100,16,"onItemPress"],[146,25,100,27],[146,26,100,28],[147,0,100,30,"route"],[147,16,100,30,"route"],[147,21,100,35],[147,23,100,30,"route"],[147,28,100,28],[148,0,100,37,"focused"],[148,16,100,37,"focused"],[148,23,100,44],[148,25,100,37,"focused"],[149,0,100,28],[149,15,100,27],[149,16,100,16],[150,0,101,15],[150,13,95,12],[151,0,102,14],[151,12,102,14],[151,24,102,26],[151,26,102,28],[152,0,95,12],[152,13,104,14],[152,42,104,15],[152,62,104,14],[153,0,105,16],[153,12,105,16],[153,17,105,21],[153,19,105,23],[153,20,105,24],[154,0,105,26,"backgroundColor"],[154,14,105,26,"backgroundColor"],[154,29,105,41],[154,31,105,26,"backgroundColor"],[155,0,105,24],[155,13,105,23],[155,15,105,45,"styles"],[155,21,105,51],[155,22,105,52,"item"],[155,26,105,23],[155,28,105,58,"itemStyle"],[155,37,105,23],[155,38,104,14],[156,0,106,16],[156,12,106,16],[156,22,106,26],[156,72,107,19,"drawerPosition"],[156,86,106,26],[156,88,107,36],[156,96,106,26],[156,135,108,19,"drawerPosition"],[156,149,108,33],[156,154,108,38],[156,160,108,19],[156,163,108,47],[156,170,108,19],[156,173,108,57],[156,179,106,26],[156,181,108,66],[156,188,106,26],[156,239,109,28],[156,246,106,26],[157,0,104,14],[157,13,112,17,"icon"],[157,17,112,21],[157,20,113,18],[157,49,113,19],[157,66,113,18],[158,0,114,20],[158,12,114,20],[158,17,114,25],[158,19,114,27],[158,20,115,22,"styles"],[158,26,115,28],[158,27,115,29,"icon"],[158,31,114,27],[158,33,116,22,"focused"],[158,40,116,29],[158,43,116,32],[158,47,116,29],[158,50,116,39,"styles"],[158,56,116,45],[158,57,116,46,"inactiveIcon"],[158,69,114,27],[158,71,117,22,"iconContainerStyle"],[158,89,114,27],[159,0,113,18],[159,13,120,21,"icon"],[159,17,113,18],[159,18,112,21],[159,21,122,20],[159,25,104,14],[159,27,123,17],[159,34,123,24,"label"],[159,39,123,17],[159,44,123,34],[159,52,123,17],[159,55,124,18],[159,84,124,19],[159,101,124,18],[160,0,125,20],[160,12,125,20],[160,17,125,25],[160,19,125,27],[160,20,126,22,"styles"],[160,26,126,28],[160,27,126,29,"label"],[160,32,125,27],[160,34,127,22],[161,0,127,24,"color"],[161,14,127,24,"color"],[161,19,127,29],[161,21,127,24,"color"],[162,0,127,22],[162,13,125,27],[162,15,128,22,"labelStyle"],[162,25,125,27],[162,27,129,22,"extraLabelStyle"],[162,42,125,27],[163,0,124,18],[163,13,132,21,"label"],[163,18,124,18],[163,19,123,17],[163,22,135,18,"label"],[163,27,104,14],[163,28,95,12],[163,29,94,10],[164,0,140,9],[164,9,80,9],[164,10,79,6],[164,11,78,4],[165,0,143,3],[168,4,10,35,"React"],[168,19,10,41,"Component"],[168,28],[170,0,10,6,"DrawerNavigatorItems"],[170,2,10,6,"DrawerNavigatorItems"],[170,22],[170,23,11,9,"contextType"],[170,34],[170,37,11,23,"ThemeContext"],[170,55],[171,0,147,0,"DrawerNavigatorItems"],[171,2,147,0,"DrawerNavigatorItems"],[171,22,147,20],[171,23,147,21,"defaultProps"],[171,35,147,0],[171,38,147,36],[172,0,148,2,"activeTintColor"],[172,4,148,2,"activeTintColor"],[172,19,148,17],[172,21,148,19],[173,0,149,4,"light"],[173,6,149,4,"light"],[173,11,149,9],[173,13,149,11],[173,22,148,19],[174,0,150,4,"dark"],[174,6,150,4,"dark"],[174,10,150,8],[174,12,150,10],[175,0,148,19],[175,5,147,36],[176,0,152,2,"activeBackgroundColor"],[176,4,152,2,"activeBackgroundColor"],[176,25,152,23],[176,27,152,25],[177,0,153,4,"light"],[177,6,153,4,"light"],[177,11,153,9],[177,13,153,11],[177,33,152,25],[178,0,154,4,"dark"],[178,6,154,4,"dark"],[178,10,154,8],[178,12,154,10],[179,0,152,25],[179,5,147,36],[180,0,156,2,"inactiveTintColor"],[180,4,156,2,"inactiveTintColor"],[180,21,156,19],[180,23,156,21],[181,0,157,4,"light"],[181,6,157,4,"light"],[181,11,157,9],[181,13,157,11],[181,33,156,21],[182,0,158,4,"dark"],[182,6,158,4,"dark"],[182,10,158,8],[182,12,158,10],[183,0,156,21],[183,5,147,36],[184,0,160,2,"inactiveBackgroundColor"],[184,4,160,2,"inactiveBackgroundColor"],[184,27,160,25],[184,29,160,27],[185,0,147,36],[185,3,147,0],[187,0,163,0],[187,6,163,6,"styles"],[187,12,163,12],[187,15,163,15,"StyleSheet"],[187,39,163,26,"create"],[187,45,163,15],[187,46,163,33],[188,0,164,2,"container"],[188,4,164,2,"container"],[188,13,164,11],[188,15,164,13],[189,0,165,4,"paddingVertical"],[189,6,165,4,"paddingVertical"],[189,21,165,19],[189,23,165,21],[190,0,164,13],[190,5,163,33],[191,0,167,2,"item"],[191,4,167,2,"item"],[191,8,167,6],[191,10,167,8],[192,0,168,4,"flexDirection"],[192,6,168,4,"flexDirection"],[192,19,168,17],[192,21,168,19],[192,26,167,8],[193,0,169,4,"alignItems"],[193,6,169,4,"alignItems"],[193,16,169,14],[193,18,169,16],[194,0,167,8],[194,5,163,33],[195,0,171,2,"icon"],[195,4,171,2,"icon"],[195,8,171,6],[195,10,171,8],[196,0,172,4,"marginHorizontal"],[196,6,172,4,"marginHorizontal"],[196,22,172,20],[196,24,172,22],[196,26,171,8],[197,0,173,4,"width"],[197,6,173,4,"width"],[197,11,173,9],[197,13,173,11],[197,15,171,8],[198,0,174,4,"alignItems"],[198,6,174,4,"alignItems"],[198,16,174,14],[198,18,174,16],[199,0,171,8],[199,5,163,33],[200,0,176,2,"inactiveIcon"],[200,4,176,2,"inactiveIcon"],[200,16,176,14],[200,18,176,16],[201,0,181,4,"opacity"],[201,6,181,4,"opacity"],[201,13,181,11],[201,15,181,13],[202,0,176,16],[202,5,163,33],[203,0,183,2,"label"],[203,4,183,2,"label"],[203,9,183,7],[203,11,183,9],[204,0,184,4,"margin"],[204,6,184,4,"margin"],[204,12,184,10],[204,14,184,12],[204,16,183,9],[205,0,185,4,"fontWeight"],[205,6,185,4,"fontWeight"],[205,16,185,14],[205,18,185,16],[206,0,183,9],[207,0,163,33],[207,3,163,15],[207,4,163,0],[209,17,189,15,"DrawerNavigatorItems"],[209,37]]},"type":"js/module"}]}