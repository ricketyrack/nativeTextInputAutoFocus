{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./797f9e69.js","data":{"isAsync":false}},{"name":"./78971f2b.js","data":{"isAsync":false}},{"name":"./a9e0b007.js","data":{"isAsync":false}},{"name":"big.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.p = exports.S = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _f9e = _$$_REQUIRE(_dependencyMap[4], \"./797f9e69.js\");\n\n  var _f2b = _$$_REQUIRE(_dependencyMap[5], \"./78971f2b.js\");\n\n  var _a9e0b = _$$_REQUIRE(_dependencyMap[6], \"./a9e0b007.js\");\n\n  var _big = _$$_REQUIRE(_dependencyMap[7], \"big.js\");\n\n  var persistableSlots = [\"amount\", \"offset\", \"selection\"],\n      pageScope = \"$pageParameter\";\n  exports.p = pageScope;\n\n  var Store = function () {\n    function Store(parentStore) {\n      (0, _classCallCheck2.default)(this, Store);\n      this.parentStore = parentStore, this.stateMap = {}, this.slotMonitors = {}, this.childStores = [], this.parentStore && this.parentStore.childStores.push(this);\n    }\n\n    (0, _createClass2.default)(Store, [{\n      key: \"destroy\",\n      value: function destroy() {\n        this.parentStore && this.parentStore.childStores.splice(this.parentStore.childStores.indexOf(this), 1);\n      }\n    }, {\n      key: \"set\",\n      value: function set(widgetId, slot, value) {\n        var state = this.getState(widgetId, slot, !1),\n            monitors = this.getAllMonitors(slot);\n        (0, _f9e.d)(function () {\n          monitors.forEach(function (m) {\n            return m.reportChanged();\n          }), state.set(value);\n        });\n      }\n    }, {\n      key: \"get$\",\n      value: function get$(widgetId, slot) {\n        return this.getState(widgetId, slot, !0).get();\n      }\n    }, {\n      key: \"getAll$\",\n      value: function getAll$(slot) {\n        return slot in this.slotMonitors || (this.slotMonitors[slot] = (0, _f9e.f)(\"Monitor for slot \" + slot)), this.slotMonitors[slot].reportObserved(), this.getAllStates(slot).map(function (s) {\n          return s.get();\n        }).filter(function (v) {\n          return void 0 !== v;\n        });\n      }\n    }, {\n      key: \"dehydrate\",\n      value: function dehydrate() {\n        var _this = this;\n\n        return Object.keys(this.stateMap).map(function (keyString) {\n          return JSON.parse(keyString);\n        }).filter(function (_ref) {\n          var slot = _ref.slot;\n          return persistableSlots.includes(slot);\n        }).map(function (_ref2) {\n          var widgetId = _ref2.widgetId,\n              slot = _ref2.slot;\n\n          var value = _this.get$(widgetId, slot);\n\n          return {\n            widgetId: widgetId,\n            slot: slot,\n            value: value instanceof _big.Big ? value.toString() : value\n          };\n        });\n      }\n    }, {\n      key: \"hydrate\",\n      value: function hydrate(states) {\n        var _this2 = this;\n\n        states.forEach(function (_ref3) {\n          var widgetId = _ref3.widgetId,\n              slot = _ref3.slot,\n              value = _ref3.value;\n\n          switch (slot) {\n            case \"amount\":\n            case \"offset\":\n              _this2.set(widgetId, slot, (0, _big.Big)(value));\n\n              break;\n\n            case \"selection\":\n              _this2.set(widgetId, slot, value);\n\n              break;\n\n            default:\n              throw new _f2b.A(\"Invalid slot for restoring the state: \" + slot);\n          }\n        });\n      }\n    }, {\n      key: \"getAllMonitors\",\n      value: function getAllMonitors(slot) {\n        return (0, _a9e0b.c)([slot in this.slotMonitors ? [this.slotMonitors[slot]] : [], this.parentStore ? this.parentStore.getAllMonitors(slot) : []]);\n      }\n    }, {\n      key: \"getAllStates\",\n      value: function getAllStates(slot) {\n        var _Object$keys$filter$m,\n            _this3 = this;\n\n        return (_Object$keys$filter$m = Object.keys(this.stateMap).filter(function (keyString) {\n          return JSON.parse(keyString).slot === slot;\n        }).map(function (keyString) {\n          return _this3.stateMap[keyString];\n        })).concat.apply(_Object$keys$filter$m, (0, _toConsumableArray2.default)(this.childStores.map(function (store) {\n          return store.getAllStates(slot);\n        })));\n      }\n    }, {\n      key: \"getState\",\n      value: function getState(widgetId, slot, inherited) {\n        var keyString = JSON.stringify({\n          widgetId: widgetId,\n          slot: slot\n        });\n        if (keyString in this.stateMap) return this.stateMap[keyString];\n\n        if (inherited && this.parentStore) {\n          var inheritedState = this.parentStore.findState(keyString);\n          if (inheritedState) return inheritedState;\n        }\n\n        return this.stateMap[keyString] = _f9e.o.box(void 0, {\n          deep: !1,\n          equals: _f9e.c.structural\n        }), this.stateMap[keyString];\n      }\n    }, {\n      key: \"findState\",\n      value: function findState(keyString) {\n        return keyString in this.stateMap ? this.stateMap[keyString] : this.parentStore ? this.parentStore.findState(keyString) : void 0;\n      }\n    }]);\n    return Store;\n  }();\n\n  exports.S = Store;\n});","map":[[15,0,1,0],[17,0,1,90],[19,0,1,137],[21,0,1,176],[23,0,1,200],[23,6,1,206,"persistableSlots"],[23,22,1,222],[23,25,1,223],[23,26,1,224],[23,34,1,223],[23,36,1,233],[23,44,1,223],[23,46,1,242],[23,57,1,223],[23,58,1,200],[24,0,1,200],[24,6,1,255,"pageScope"],[24,15,1,264],[24,18,1,265],[24,34,1,200],[27,6,1,288,"Store"],[27,11],[28,0,1,294],[28,19,1,306,"parentStore"],[28,30,1,294],[28,32,1,318],[29,0,1,318],[30,0,1,319],[30,11,1,324,"parentStore"],[30,22,1,319],[30,25,1,336,"parentStore"],[30,36,1,319],[30,38,1,348],[30,43,1,353,"stateMap"],[30,51,1,348],[30,54,1,362],[30,56,1,319],[30,58,1,365],[30,63,1,370,"slotMonitors"],[30,75,1,365],[30,78,1,383],[30,80,1,319],[30,82,1,386],[30,87,1,391,"childStores"],[30,98,1,386],[30,101,1,403],[30,103,1,319],[30,105,1,406],[30,110,1,411,"parentStore"],[30,121,1,406],[30,125,1,424],[30,130,1,429,"parentStore"],[30,141,1,424],[30,142,1,441,"childStores"],[30,153,1,424],[30,154,1,453,"push"],[30,158,1,424],[30,159,1,458],[30,163,1,424],[30,164,1,319],[31,0,1,464],[35,32,1,473],[36,0,1,474],[36,13,1,479,"parentStore"],[36,24,1,474],[36,28,1,492],[36,33,1,497,"parentStore"],[36,44,1,492],[36,45,1,509,"childStores"],[36,56,1,492],[36,57,1,521,"splice"],[36,63,1,492],[36,64,1,528],[36,69,1,533,"parentStore"],[36,80,1,528],[36,81,1,545,"childStores"],[36,92,1,528],[36,93,1,557,"indexOf"],[36,100,1,528],[36,101,1,565],[36,105,1,528],[36,106,1,492],[36,108,1,571],[36,109,1,492],[36,110,1,474],[37,0,1,574],[40,26,1,578,"widgetId"],[40,34],[40,36,1,587,"slot"],[40,40],[40,42,1,592,"value"],[40,47],[40,49,1,598],[41,0,1,599],[41,12,1,605,"state"],[41,17,1,610],[41,20,1,611],[41,25,1,616,"getState"],[41,33,1,611],[41,34,1,625,"widgetId"],[41,42,1,611],[41,44,1,634,"slot"],[41,48,1,611],[41,50,1,639],[41,51,1,640],[41,52,1,611],[41,53,1,599],[42,0,1,599],[42,12,1,643,"monitors"],[42,20,1,651],[42,23,1,652],[42,28,1,657,"getAllMonitors"],[42,42,1,652],[42,43,1,672,"slot"],[42,47,1,652],[42,48,1,599],[43,0,1,678],[43,20,1,690],[43,32,1,694],[44,0,1,695,"monitors"],[44,10,1,695,"monitors"],[44,18,1,703],[44,19,1,704,"forEach"],[44,26,1,695],[44,27,1,712],[44,37,1,712,"m"],[44,38,1,713],[45,0,1,713],[45,19,1,715,"m"],[45,20,1,716],[45,21,1,717,"reportChanged"],[45,34,1,715],[45,36,1,713],[46,0,1,713],[46,11,1,695],[46,14,1,734,"state"],[46,19,1,739],[46,20,1,740,"set"],[46,23,1,734],[46,24,1,744,"value"],[46,29,1,734],[46,30,1,695],[47,0,1,751],[47,9,1,678],[48,0,1,753],[51,27,1,758,"widgetId"],[51,35],[51,37,1,767,"slot"],[51,41],[51,43,1,772],[52,0,1,773],[52,15,1,780],[52,20,1,785,"getState"],[52,28,1,780],[52,29,1,794,"widgetId"],[52,37,1,780],[52,39,1,803,"slot"],[52,43,1,780],[52,45,1,808],[52,46,1,809],[52,47,1,780],[52,49,1,812,"get"],[52,52,1,780],[52,54,1,773],[53,0,1,818],[56,30,1,826,"slot"],[56,34],[56,36,1,831],[57,0,1,832],[57,15,1,839,"slot"],[57,19,1,843],[57,23,1,847],[57,28,1,852,"slotMonitors"],[57,40,1,839],[57,45,1,867],[57,50,1,872,"slotMonitors"],[57,62,1,867],[57,63,1,885,"slot"],[57,67,1,867],[57,71,1,891],[57,105,1,922,"slot"],[57,109,1,891],[57,110,1,839],[57,113,1,931],[57,118,1,936,"slotMonitors"],[57,130,1,931],[57,131,1,949,"slot"],[57,135,1,931],[57,137,1,955,"reportObserved"],[57,151,1,931],[57,153,1,839],[57,155,1,972],[57,160,1,977,"getAllStates"],[57,172,1,972],[57,173,1,990,"slot"],[57,177,1,972],[57,179,1,996,"map"],[57,182,1,972],[57,183,1,1000],[57,193,1,1000,"s"],[57,194,1,1001],[58,0,1,1001],[58,17,1,1003,"s"],[58,18,1,1004],[58,19,1,1005,"get"],[58,22,1,1003],[58,24,1,1001],[59,0,1,1001],[59,9,1,972],[59,11,1,1012,"filter"],[59,17,1,972],[59,18,1,1019],[59,28,1,1019,"v"],[59,29,1,1020],[60,0,1,1020],[60,17,1,1022],[60,22,1,1027],[60,23,1,1022],[60,28,1,1031,"v"],[60,29,1,1020],[61,0,1,1020],[61,9,1,972],[61,10,1,832],[62,0,1,1034],[65,34,1,1045],[66,0,1,1045],[68,0,1,1046],[68,15,1,1053,"Object"],[68,21,1,1059],[68,22,1,1060,"keys"],[68,26,1,1053],[68,27,1,1065],[68,32,1,1070,"stateMap"],[68,40,1,1053],[68,42,1,1080,"map"],[68,45,1,1053],[68,46,1,1084],[68,56,1,1084,"keyString"],[68,65,1,1093],[69,0,1,1093],[69,17,1,1095,"JSON"],[69,21,1,1099],[69,22,1,1100,"parse"],[69,27,1,1095],[69,28,1,1106,"keyString"],[69,37,1,1095],[69,38,1,1093],[70,0,1,1093],[70,9,1,1053],[70,11,1,1118,"filter"],[70,17,1,1053],[70,18,1,1125],[71,0,1,1125],[71,14,1,1132,"slot"],[71,18,1,1125],[71,26,1,1127,"slot"],[71,30,1,1125],[72,0,1,1125],[72,17,1,1140,"persistableSlots"],[72,33,1,1156],[72,34,1,1157,"includes"],[72,42,1,1140],[72,43,1,1166,"slot"],[72,47,1,1140],[72,48,1,1125],[73,0,1,1125],[73,9,1,1053],[73,11,1,1173,"map"],[73,14,1,1053],[73,15,1,1177],[73,32,1,1210],[74,0,1,1210],[74,14,1,1188,"widgetId"],[74,22,1,1210],[74,31,1,1179,"widgetId"],[74,39,1,1210],[75,0,1,1210],[75,14,1,1202,"slot"],[75,18,1,1210],[75,27,1,1197,"slot"],[75,31,1,1210],[77,0,1,1211],[77,14,1,1217,"value"],[77,19,1,1222],[77,22,1,1223],[77,27,1,1227],[77,28,1,1228,"get$"],[77,32,1,1223],[77,33,1,1233,"widgetId"],[77,41,1,1223],[77,43,1,1242,"slot"],[77,47,1,1223],[77,48,1,1211],[79,0,1,1248],[79,17,1,1254],[80,0,1,1255,"widgetId"],[80,12,1,1255,"widgetId"],[80,20,1,1263],[80,22,1,1264,"widgetId"],[80,30,1,1254],[81,0,1,1273,"slot"],[81,12,1,1273,"slot"],[81,16,1,1277],[81,18,1,1278,"slot"],[81,22,1,1254],[82,0,1,1283,"value"],[82,12,1,1283,"value"],[82,17,1,1288],[82,19,1,1289,"value"],[82,24,1,1294],[82,36,1,1306,"Big"],[82,44,1,1289],[82,47,1,1310,"value"],[82,52,1,1315],[82,53,1,1316,"toString"],[82,61,1,1310],[82,63,1,1289],[82,66,1,1327,"value"],[83,0,1,1254],[83,11,1,1248],[84,0,1,1334],[84,9,1,1053],[84,10,1,1046],[85,0,1,1336],[88,30,1,1344,"states"],[88,36],[88,38,1,1351],[89,0,1,1351],[91,0,1,1352,"states"],[91,8,1,1352,"states"],[91,14,1,1358],[91,15,1,1359,"forEach"],[91,22,1,1352],[91,23,1,1367],[91,40,1,1412],[92,0,1,1412],[92,14,1,1378,"widgetId"],[92,22,1,1412],[92,31,1,1369,"widgetId"],[92,39,1,1412],[93,0,1,1412],[93,14,1,1392,"slot"],[93,18,1,1412],[93,27,1,1387,"slot"],[93,31,1,1412],[94,0,1,1412],[94,14,1,1403,"value"],[94,19,1,1412],[94,28,1,1397,"value"],[94,33,1,1412],[96,0,1,1413],[96,18,1,1420,"slot"],[96,22,1,1413],[97,0,1,1426],[97,17,1,1430],[97,25,1,1426],[98,0,1,1439],[98,17,1,1443],[98,25,1,1439],[99,0,1,1452],[99,14,1,1452],[99,20,1,1456],[99,21,1,1457,"set"],[99,24,1,1452],[99,25,1,1461,"widgetId"],[99,33,1,1452],[99,35,1,1470,"slot"],[99,39,1,1452],[99,41,1,1475],[99,55,1,1479,"value"],[99,60,1,1475],[99,61,1,1452],[101,0,1,1487],[103,0,1,1493],[103,17,1,1497],[103,28,1,1493],[104,0,1,1509],[104,14,1,1509],[104,20,1,1513],[104,21,1,1514,"set"],[104,24,1,1509],[104,25,1,1518,"widgetId"],[104,33,1,1509],[104,35,1,1527,"slot"],[104,39,1,1509],[104,41,1,1532,"value"],[104,46,1,1509],[106,0,1,1539],[108,0,1,1545],[109,0,1,1553],[109,20,1,1559],[109,24,1,1563,"AssertionError"],[109,30,1,1559],[109,74,1,1619,"slot"],[109,78,1,1559],[109,79,1,1553],[110,0,1,1413],[111,0,1,1628],[111,9,1,1352],[112,0,1,1630],[115,37,1,1645,"slot"],[115,41],[115,43,1,1650],[116,0,1,1651],[116,15,1,1658],[116,29,1,1665],[116,30,1,1666,"slot"],[116,34,1,1670],[116,38,1,1674],[116,43,1,1679,"slotMonitors"],[116,55,1,1666],[116,58,1,1692],[116,59,1,1693],[116,64,1,1698,"slotMonitors"],[116,76,1,1693],[116,77,1,1711,"slot"],[116,81,1,1693],[116,82,1,1692],[116,83,1,1666],[116,86,1,1718],[116,88,1,1665],[116,90,1,1721],[116,95,1,1726,"parentStore"],[116,106,1,1721],[116,109,1,1738],[116,114,1,1743,"parentStore"],[116,125,1,1738],[116,126,1,1755,"getAllMonitors"],[116,140,1,1738],[116,141,1,1770,"slot"],[116,145,1,1738],[116,146,1,1721],[116,149,1,1776],[116,151,1,1665],[116,152,1,1658],[116,153,1,1651],[117,0,1,1781],[120,35,1,1794,"slot"],[120,39],[120,41,1,1799],[121,0,1,1799],[122,0,1,1799],[124,0,1,1800],[124,15,1,1807],[124,40,1,1807,"Object"],[124,46,1,1813],[124,47,1,1814,"keys"],[124,51,1,1807],[124,52,1,1819],[124,57,1,1824,"stateMap"],[124,65,1,1807],[124,67,1,1834,"filter"],[124,73,1,1807],[124,74,1,1841],[124,84,1,1841,"keyString"],[124,93,1,1850],[125,0,1,1850],[125,17,1,1852,"JSON"],[125,21,1,1856],[125,22,1,1857,"parse"],[125,27,1,1852],[125,28,1,1863,"keyString"],[125,37,1,1852],[125,39,1,1874,"slot"],[125,43,1,1852],[125,48,1,1881,"slot"],[125,52,1,1850],[126,0,1,1850],[126,9,1,1807],[126,11,1,1887,"map"],[126,14,1,1807],[126,15,1,1891],[126,25,1,1891,"keyString"],[126,34,1,1900],[127,0,1,1900],[127,17,1,1902],[127,23,1,1906],[127,24,1,1907,"stateMap"],[127,32,1,1902],[127,33,1,1916,"keyString"],[127,42,1,1902],[127,43,1,1900],[128,0,1,1900],[128,9,1,1807],[128,12,1,1928,"concat"],[128,18,1,1807],[128,81,1,1938],[128,86,1,1943,"childStores"],[128,97,1,1938],[128,98,1,1955,"map"],[128,101,1,1938],[128,102,1,1959],[128,112,1,1959,"store"],[128,117,1,1964],[129,0,1,1964],[129,17,1,1966,"store"],[129,22,1,1971],[129,23,1,1972,"getAllStates"],[129,35,1,1966],[129,36,1,1985,"slot"],[129,40,1,1966],[129,41,1,1964],[130,0,1,1964],[130,9,1,1938],[130,10,1,1807],[130,12,1,1800],[131,0,1,1993],[134,31,1,2002,"widgetId"],[134,39],[134,41,1,2011,"slot"],[134,45],[134,47,1,2016,"inherited"],[134,56],[134,58,1,2026],[135,0,1,2027],[135,12,1,2033,"keyString"],[135,21,1,2042],[135,24,1,2043,"JSON"],[135,28,1,2047],[135,29,1,2048,"stringify"],[135,38,1,2043],[135,39,1,2058],[136,0,1,2059,"widgetId"],[136,10,1,2059,"widgetId"],[136,18,1,2067],[136,20,1,2068,"widgetId"],[136,28,1,2058],[137,0,1,2077,"slot"],[137,10,1,2077,"slot"],[137,14,1,2081],[137,16,1,2082,"slot"],[138,0,1,2058],[138,9,1,2043],[138,10,1,2027],[139,0,1,2089],[139,12,1,2092,"keyString"],[139,21,1,2101],[139,25,1,2105],[139,30,1,2110,"stateMap"],[139,38,1,2089],[139,40,1,2119],[139,47,1,2126],[139,52,1,2131,"stateMap"],[139,60,1,2126],[139,61,1,2140,"keyString"],[139,70,1,2126],[139,71,1,2119],[141,0,1,2151],[141,12,1,2154,"inherited"],[141,21,1,2163],[141,25,1,2165],[141,30,1,2170,"parentStore"],[141,41,1,2151],[141,43,1,2182],[142,0,1,2183],[142,14,1,2189,"inheritedState"],[142,28,1,2203],[142,31,1,2204],[142,36,1,2209,"parentStore"],[142,47,1,2204],[142,48,1,2221,"findState"],[142,57,1,2204],[142,58,1,2231,"keyString"],[142,67,1,2204],[142,68,1,2183],[143,0,1,2242],[143,14,1,2245,"inheritedState"],[143,28,1,2242],[143,30,1,2260],[143,37,1,2267,"inheritedState"],[143,51,1,2260],[144,0,1,2282],[146,0,1,2282],[146,15,1,2289],[146,20,1,2294,"stateMap"],[146,28,1,2289],[146,29,1,2303,"keyString"],[146,38,1,2289],[146,42,1,2314,"observable"],[146,49,1,2325,"box"],[146,52,1,2314],[146,53,1,2329],[146,58,1,2334],[146,59,1,2314],[146,61,1,2336],[147,0,1,2337,"deep"],[147,10,1,2337,"deep"],[147,14,1,2341],[147,16,1,2342],[147,17,1,2343],[147,18,1,2336],[148,0,1,2345,"equals"],[148,10,1,2345,"equals"],[148,16,1,2351],[148,18,1,2352,"comparer"],[148,25,1,2361,"structural"],[149,0,1,2336],[149,9,1,2314],[149,10,1,2289],[149,12,1,2374],[149,17,1,2379,"stateMap"],[149,25,1,2374],[149,26,1,2388,"keyString"],[149,35,1,2374],[149,36,1,2282],[150,0,1,2399],[153,32,1,2409,"keyString"],[153,41],[153,43,1,2419],[154,0,1,2420],[154,15,1,2427,"keyString"],[154,24,1,2436],[154,28,1,2440],[154,33,1,2445,"stateMap"],[154,41,1,2427],[154,44,1,2454],[154,49,1,2459,"stateMap"],[154,57,1,2454],[154,58,1,2468,"keyString"],[154,67,1,2454],[154,68,1,2427],[154,71,1,2479],[154,76,1,2484,"parentStore"],[154,87,1,2479],[154,90,1,2496],[154,95,1,2501,"parentStore"],[154,106,1,2496],[154,107,1,2513,"findState"],[154,116,1,2496],[154,117,1,2523,"keyString"],[154,126,1,2496],[154,127,1,2479],[154,130,1,2534],[154,135,1,2539],[154,136,1,2420],[155,0,1,2541]]},"type":"js/module"}]}