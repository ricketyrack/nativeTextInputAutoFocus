{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"./78971f2b.js","data":{"isAsync":false}},{"name":"./a9e0b007.js","data":{"isAsync":false}},{"name":"./a7430d35.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.a = getGuidsFromMicroflowParameters;\n  exports.b = getJavaScriptAction;\n  exports.c = getNanoflow;\n  exports.d = toNanoflowArguments;\n  exports.e = getActionParameters$;\n  exports.g = getNanoflowArguments;\n  exports.t = toMicroflowParameters;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  _$$_REQUIRE(_dependencyMap[3], \"./78971f2b.js\");\n\n  var _a9e0b = _$$_REQUIRE(_dependencyMap[4], \"./a9e0b007.js\");\n\n  var _a7430d = _$$_REQUIRE(_dependencyMap[5], \"./a7430d35.js\");\n\n  function getNanoflow(nanoflowId) {\n    return nanoflowId();\n  }\n\n  function getJavaScriptAction(jsActionId) {\n    return _regenerator.default.async(function getJavaScriptAction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", jsActionId());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getActionParameters$(argMap, store) {\n    return (0, _a9e0b.q)(argMap, function (_ref) {\n      var source = _ref.source,\n          widget = _ref.widget;\n      return function (state, source) {\n        if (void 0 === state) return \"selection\" === source ? (0, _a9e0b.a)({\n          objects: []\n        }) : (0, _a9e0b.l)();\n\n        if (Array.isArray(state)) {\n          var objects = (0, _a9e0b.n)((0, _a7430d.f)(state), function (objs) {\n            return objs.map(function (o) {\n              return o.old();\n            });\n          });\n          return (0, _a9e0b.a)({\n            objects: (0, _a9e0b.g)(objects, [])\n          });\n        }\n\n        return (0, _a9e0b.n)(_a7430d.M.fromState$(state), function (obj) {\n          return {\n            object: obj.old()\n          };\n        });\n      }(store.get$(widget, \"allpages\" === source ? \"allGuids\" : source), source);\n    });\n  }\n\n  function toMicroflowParameters(parameters) {\n    var result = {};\n    return Object.keys(parameters).forEach(function (name) {\n      var value = parameters[name];\n      value && (result[name] = \"objects\" in value ? {\n        guids: value.objects.map(function (mxobj) {\n          return mxobj.getGuid();\n        })\n      } : \"object\" in value ? {\n        guid: value.object.getGuid()\n      } : value);\n    }), result;\n  }\n\n  function toNanoflowArguments(parameters) {\n    var result = [];\n    return Object.keys(parameters).forEach(function (name) {\n      var value = parameters[name];\n      result.push({\n        name: name,\n        value: void 0 !== value ? \"object\" in value ? value.object : (0, _a9e0b.r)() : void 0\n      });\n    }), result;\n  }\n\n  function getNanoflowArguments(nanoflowId, context) {\n    var _getNanoflow, paramsSpec, paramNameToGuids;\n\n    return _regenerator.default.async(function getNanoflowArguments$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _getNanoflow = getNanoflow(nanoflowId), paramsSpec = _getNanoflow.paramsSpec, paramNameToGuids = Object.keys(paramsSpec).map(function (paramName) {\n              var _a;\n\n              return {\n                name: paramName,\n                guid: (_a = context.getContext(paramsSpec[paramName]), null != _a ? _a : void 0)\n              };\n            });\n            return _context3.abrupt(\"return\", function _callee(guids) {\n              return _regenerator.default.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                        mx.data.get({\n                          guids: guids,\n                          callback: resolve,\n                          error: reject\n                        });\n                      }));\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            }(paramNameToGuids.filter(function (x) {\n              return Boolean(x.guid);\n            }).map(function (x) {\n              return x.guid;\n            })).then(function (allObjects) {\n              return paramNameToGuids.map(function (_ref2) {\n                var paramName = _ref2.name,\n                    guid = _ref2.guid;\n                return {\n                  name: paramName,\n                  value: allObjects.find(function (o) {\n                    return o.getGuid() === guid;\n                  })\n                };\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function getGuidsFromMicroflowParameters(mfParams) {\n    var mfGuids = [];\n    return Object.values(mfParams).forEach(function (mfParam) {\n      \"guid\" in mfParam ? mfGuids.push(mfParam.guid) : \"guids\" in mfParam && mfGuids.push.apply(mfGuids, (0, _toConsumableArray2.default)(mfParam.guids));\n    }), mfGuids;\n  }\n});","map":[[19,0,1,0],[21,0,1,22],[23,0,1,129],[25,0,1,190],[25,11,1,199,"getNanoflow"],[25,22,1,190],[25,23,1,211,"nanoflowId"],[25,33,1,190],[25,35,1,222],[26,0,1,223],[26,11,1,230,"nanoflowId"],[26,21,1,240],[26,23,1,223],[27,0,1,243],[29,0,1,243],[29,11,1,258,"getJavaScriptAction"],[29,30,1,243],[29,31,1,278,"jsActionId"],[29,41,1,243],[30,0,1,243],[31,0,1,243],[32,0,1,243],[33,0,1,243],[34,0,1,243],[34,45,1,297,"jsActionId"],[34,55,1,307],[34,57,1,243],[36,0,1,243],[37,0,1,243],[38,0,1,243],[39,0,1,243],[40,0,1,243],[41,0,1,243],[42,0,1,243],[44,0,1,310],[44,11,1,319,"getActionParameters$"],[44,31,1,310],[44,32,1,340,"argMap"],[44,38,1,310],[44,40,1,347,"store"],[44,45,1,310],[44,47,1,353],[45,0,1,354],[45,11,1,361],[45,25,1,371,"argMap"],[45,31,1,361],[45,33,1,378],[45,49,1,411],[46,0,1,411],[46,10,1,387,"source"],[46,16,1,411],[46,24,1,380,"source"],[46,30,1,411],[47,0,1,411],[47,10,1,401,"widget"],[47,16,1,411],[47,24,1,394,"widget"],[47,30,1,411],[48,0,1,412],[48,13,1,419],[48,23,1,428,"state"],[48,28,1,419],[48,30,1,434,"source"],[48,36,1,419],[48,38,1,441],[49,0,1,442],[49,12,1,445],[49,17,1,450],[49,18,1,445],[49,23,1,454,"state"],[49,28,1,442],[49,30,1,460],[49,37,1,466],[49,53,1,480,"source"],[49,59,1,466],[49,62,1,487],[49,76,1,497],[50,0,1,498,"objects"],[50,10,1,498,"objects"],[50,17,1,505],[50,19,1,506],[51,0,1,497],[51,9,1,487],[51,10,1,466],[51,13,1,511],[51,28,1,460],[53,0,1,521],[53,12,1,524,"Array"],[53,17,1,529],[53,18,1,530,"isArray"],[53,25,1,524],[53,26,1,538,"state"],[53,31,1,524],[53,32,1,521],[53,34,1,545],[54,0,1,546],[54,14,1,552,"objects"],[54,21,1,559],[54,24,1,560],[54,38,1,565],[54,53,1,579,"state"],[54,58,1,565],[54,59,1,560],[54,61,1,586],[54,71,1,586,"objs"],[54,75,1,590],[55,0,1,590],[55,19,1,592,"objs"],[55,23,1,596],[55,24,1,597,"map"],[55,27,1,592],[55,28,1,601],[55,38,1,601,"o"],[55,39,1,602],[56,0,1,602],[56,21,1,604,"o"],[56,22,1,605],[56,23,1,606,"old"],[56,26,1,604],[56,28,1,602],[57,0,1,602],[57,13,1,592],[57,14,1,590],[58,0,1,590],[58,11,1,560],[58,12,1,546],[59,0,1,614],[59,17,1,621],[59,31,1,631],[60,0,1,632,"objects"],[60,12,1,632,"objects"],[60,19,1,639],[60,21,1,640],[60,35,1,651,"objects"],[60,42,1,640],[60,44,1,659],[60,46,1,640],[61,0,1,631],[61,11,1,621],[61,12,1,614],[62,0,1,665],[64,0,1,665],[64,15,1,672],[64,29,1,677,"MxObject1"],[64,39,1,687,"fromState$"],[64,49,1,677],[64,50,1,698,"state"],[64,55,1,677],[64,56,1,672],[64,58,1,705],[64,68,1,705,"obj"],[64,71,1,708],[65,0,1,708],[65,17,1,711],[66,0,1,712,"object"],[66,12,1,712,"object"],[66,18,1,718],[66,20,1,719,"obj"],[66,23,1,722],[66,24,1,723,"old"],[66,27,1,719],[67,0,1,711],[67,11,1,708],[68,0,1,708],[68,9,1,672],[68,10,1,665],[69,0,1,732],[69,7,1,419],[69,8,1,733,"store"],[69,13,1,738],[69,14,1,739,"get$"],[69,18,1,733],[69,19,1,744,"widget"],[69,25,1,733],[69,27,1,751],[69,42,1,764,"source"],[69,48,1,751],[69,51,1,771],[69,61,1,751],[69,64,1,782,"source"],[69,70,1,733],[69,71,1,419],[69,73,1,790,"source"],[69,79,1,419],[69,80,1,412],[70,0,1,798],[70,5,1,361],[70,6,1,354],[71,0,1,800],[73,0,1,800],[73,11,1,809,"toMicroflowParameters"],[73,32,1,800],[73,33,1,831,"parameters"],[73,43,1,800],[73,45,1,842],[74,0,1,843],[74,8,1,849,"result"],[74,14,1,855],[74,17,1,856],[74,19,1,843],[75,0,1,859],[75,11,1,866,"Object"],[75,17,1,872],[75,18,1,873,"keys"],[75,22,1,866],[75,23,1,878,"parameters"],[75,33,1,866],[75,35,1,890,"forEach"],[75,42,1,866],[75,43,1,898],[75,53,1,898,"name"],[75,57,1,902],[75,59,1,904],[76,0,1,905],[76,10,1,911,"value"],[76,15,1,916],[76,18,1,917,"parameters"],[76,28,1,927],[76,29,1,928,"name"],[76,33,1,927],[76,34,1,905],[77,0,1,934,"value"],[77,6,1,934,"value"],[77,11,1,939],[77,16,1,942,"result"],[77,22,1,948],[77,23,1,949,"name"],[77,27,1,948],[77,28,1,942],[77,31,1,955],[77,44,1,967,"value"],[77,49,1,955],[77,52,1,973],[78,0,1,974,"guids"],[78,8,1,974,"guids"],[78,13,1,979],[78,15,1,980,"value"],[78,20,1,985],[78,21,1,986,"objects"],[78,28,1,980],[78,29,1,994,"map"],[78,32,1,980],[78,33,1,998],[78,43,1,998,"mxobj"],[78,48,1,1003],[79,0,1,1003],[79,17,1,1005,"mxobj"],[79,22,1,1010],[79,23,1,1011,"getGuid"],[79,30,1,1005],[79,32,1,1003],[80,0,1,1003],[80,9,1,980],[81,0,1,973],[81,7,1,955],[81,10,1,1023],[81,22,1,1034,"value"],[81,27,1,1023],[81,30,1,1040],[82,0,1,1041,"guid"],[82,8,1,1041,"guid"],[82,12,1,1045],[82,14,1,1046,"value"],[82,19,1,1051],[82,20,1,1052,"object"],[82,26,1,1046],[82,27,1,1059,"getGuid"],[82,34,1,1046],[83,0,1,1040],[83,7,1,1023],[83,10,1,1070,"value"],[83,15,1,939],[83,16,1,934],[84,0,1,1077],[84,5,1,866],[84,8,1,1079,"result"],[84,14,1,859],[85,0,1,1086],[87,0,1,1086],[87,11,1,1095,"toNanoflowArguments"],[87,30,1,1086],[87,31,1,1115,"parameters"],[87,41,1,1086],[87,43,1,1126],[88,0,1,1127],[88,8,1,1133,"result"],[88,14,1,1139],[88,17,1,1140],[88,19,1,1127],[89,0,1,1143],[89,11,1,1150,"Object"],[89,17,1,1156],[89,18,1,1157,"keys"],[89,22,1,1150],[89,23,1,1162,"parameters"],[89,33,1,1150],[89,35,1,1174,"forEach"],[89,42,1,1150],[89,43,1,1182],[89,53,1,1182,"name"],[89,57,1,1186],[89,59,1,1188],[90,0,1,1189],[90,10,1,1195,"value"],[90,15,1,1200],[90,18,1,1201,"parameters"],[90,28,1,1211],[90,29,1,1212,"name"],[90,33,1,1211],[90,34,1,1189],[91,0,1,1218,"result"],[91,6,1,1218,"result"],[91,12,1,1224],[91,13,1,1225,"push"],[91,17,1,1218],[91,18,1,1230],[92,0,1,1231,"name"],[92,8,1,1231,"name"],[92,12,1,1235],[92,14,1,1236,"name"],[92,18,1,1230],[93,0,1,1241,"value"],[93,8,1,1241,"value"],[93,13,1,1246],[93,15,1,1247],[93,20,1,1252],[93,21,1,1247],[93,26,1,1256,"value"],[93,31,1,1247],[93,34,1,1262],[93,46,1,1273,"value"],[93,51,1,1262],[93,54,1,1279,"value"],[93,59,1,1284],[93,60,1,1285,"object"],[93,66,1,1262],[93,69,1,1292],[93,84,1,1247],[93,87,1,1300],[93,92,1,1305],[94,0,1,1230],[94,7,1,1218],[95,0,1,1309],[95,5,1,1150],[95,8,1,1311,"result"],[95,14,1,1143],[96,0,1,1318],[98,0,1,1318],[98,11,1,1333,"getNanoflowArguments"],[98,31,1,1318],[98,32,1,1354,"nanoflowId"],[98,42,1,1318],[98,44,1,1365,"context"],[98,51,1,1318],[99,0,1,1318],[101,0,1,1318],[102,0,1,1318],[103,0,1,1318],[104,0,1,1318],[105,0,1,1318],[105,27,1,1403,"getNanoflow"],[105,38,1,1414],[105,39,1,1415,"nanoflowId"],[105,49,1,1414],[105,50,1,1318],[105,52,1,1391,"paramsSpec"],[105,62,1,1318],[105,78,1,1380,"paramsSpec"],[105,88,1,1318],[105,90,1,1427,"paramNameToGuids"],[105,106,1,1318],[105,109,1,1444,"Object"],[105,115,1,1450],[105,116,1,1451,"keys"],[105,120,1,1444],[105,121,1,1456,"paramsSpec"],[105,131,1,1444],[105,133,1,1468,"map"],[105,136,1,1444],[105,137,1,1472],[105,147,1,1472,"paramName"],[105,156,1,1481],[105,158,1,1483],[106,0,1,1484],[106,18,1,1488,"_a"],[106,20,1,1484],[108,0,1,1491],[108,21,1,1497],[109,0,1,1498,"name"],[109,16,1,1498,"name"],[109,20,1,1502],[109,22,1,1503,"paramName"],[109,31,1,1497],[110,0,1,1513,"guid"],[110,16,1,1513,"guid"],[110,20,1,1517],[110,23,1,1519,"_a"],[110,25,1,1521],[110,28,1,1522,"context"],[110,35,1,1529],[110,36,1,1530,"getContext"],[110,46,1,1522],[110,47,1,1541,"paramsSpec"],[110,57,1,1551],[110,58,1,1552,"paramName"],[110,67,1,1551],[110,68,1,1522],[110,69,1,1519],[110,71,1,1564],[110,79,1,1570,"_a"],[110,81,1,1564],[110,84,1,1573,"_a"],[110,86,1,1564],[110,89,1,1576],[110,94,1,1581],[110,95,1,1517],[111,0,1,1497],[111,15,1,1491],[112,0,1,1585],[112,13,1,1444],[112,14,1,1318],[113,0,1,1318],[113,46,1,1594],[113,63,1,1609,"guids"],[113,68,1,1594],[114,0,1,1594],[115,0,1,1594],[116,0,1,1594],[117,0,1,1594],[118,0,1,1594],[118,56,1,1623],[118,60,1,1627,"Promise"],[118,67,1,1623],[118,68,1,1635],[118,78,1,1636,"resolve"],[118,85,1,1635],[118,87,1,1644,"reject"],[118,93,1,1635],[118,95,1,1653],[119,0,1,1654,"mx"],[119,24,1,1654,"mx"],[119,26,1,1656],[119,27,1,1657,"data"],[119,31,1,1654],[119,32,1,1662,"get"],[119,35,1,1654],[119,36,1,1666],[120,0,1,1667,"guids"],[120,26,1,1667,"guids"],[120,31,1,1672],[120,33,1,1673,"guids"],[120,38,1,1666],[121,0,1,1679,"callback"],[121,26,1,1679,"callback"],[121,34,1,1687],[121,36,1,1688,"resolve"],[121,43,1,1666],[122,0,1,1696,"error"],[122,26,1,1696,"error"],[122,31,1,1701],[122,33,1,1702,"reject"],[123,0,1,1666],[123,25,1,1654],[124,0,1,1711],[124,23,1,1623],[124,24,1,1594],[126,0,1,1594],[127,0,1,1594],[128,0,1,1594],[129,0,1,1594],[130,0,1,1594],[131,0,1,1594],[132,0,1,1594],[132,14,1,1714,"paramNameToGuids"],[132,30,1,1730],[132,31,1,1731,"filter"],[132,37,1,1714],[132,38,1,1738],[132,48,1,1738,"x"],[132,49,1,1739],[133,0,1,1739],[133,21,1,1741,"Boolean"],[133,28,1,1748],[133,29,1,1749,"x"],[133,30,1,1750],[133,31,1,1751,"guid"],[133,35,1,1748],[133,36,1,1739],[134,0,1,1739],[134,13,1,1714],[134,15,1,1758,"map"],[134,18,1,1714],[134,19,1,1762],[134,29,1,1762,"x"],[134,30,1,1763],[135,0,1,1763],[135,21,1,1765,"x"],[135,22,1,1766],[135,23,1,1767,"guid"],[135,27,1,1763],[136,0,1,1763],[136,13,1,1714],[136,14,1,1594],[136,16,1,1774,"then"],[136,20,1,1594],[136,21,1,1779],[136,31,1,1779,"allObjects"],[136,41,1,1789],[137,0,1,1789],[137,21,1,1791,"paramNameToGuids"],[137,37,1,1807],[137,38,1,1808,"map"],[137,41,1,1791],[137,42,1,1812],[138,0,1,1812],[138,20,1,1819,"paramName"],[138,29,1,1812],[138,38,1,1814,"name"],[138,42,1,1812],[139,0,1,1812],[139,20,1,1834,"guid"],[139,24,1,1812],[139,33,1,1829,"guid"],[139,37,1,1812],[140,0,1,1812],[140,23,1,1843],[141,0,1,1844,"name"],[141,18,1,1844,"name"],[141,22,1,1848],[141,24,1,1849,"paramName"],[141,33,1,1843],[142,0,1,1859,"value"],[142,18,1,1859,"value"],[142,23,1,1864],[142,25,1,1865,"allObjects"],[142,35,1,1875],[142,36,1,1876,"find"],[142,40,1,1865],[142,41,1,1881],[142,51,1,1881,"o"],[142,52,1,1882],[143,0,1,1882],[143,27,1,1884,"o"],[143,28,1,1885],[143,29,1,1886,"getGuid"],[143,36,1,1884],[143,43,1,1898,"guid"],[143,47,1,1882],[144,0,1,1882],[144,19,1,1865],[145,0,1,1843],[145,17,1,1812],[146,0,1,1812],[146,15,1,1791],[146,16,1,1789],[147,0,1,1789],[147,13,1,1594],[147,14,1,1318],[149,0,1,1318],[150,0,1,1318],[151,0,1,1318],[152,0,1,1318],[153,0,1,1318],[154,0,1,1318],[155,0,1,1318],[157,0,1,1908],[157,11,1,1917,"getGuidsFromMicroflowParameters"],[157,42,1,1908],[157,43,1,1949,"mfParams"],[157,51,1,1908],[157,53,1,1958],[158,0,1,1959],[158,8,1,1965,"mfGuids"],[158,15,1,1972],[158,18,1,1973],[158,20,1,1959],[159,0,1,1976],[159,11,1,1983,"Object"],[159,17,1,1989],[159,18,1,1990,"values"],[159,24,1,1983],[159,25,1,1997,"mfParams"],[159,33,1,1983],[159,35,1,2007,"forEach"],[159,42,1,1983],[159,43,1,2015],[159,53,1,2015,"mfParam"],[159,60,1,2022],[159,62,1,2024],[160,0,1,2025],[160,16,1,2034,"mfParam"],[160,23,1,2025],[160,26,1,2042,"mfGuids"],[160,33,1,2049],[160,34,1,2050,"push"],[160,38,1,2042],[160,39,1,2055,"mfParam"],[160,46,1,2062],[160,47,1,2063,"guid"],[160,51,1,2042],[160,52,1,2025],[160,55,1,2069],[160,66,1,2079,"mfParam"],[160,73,1,2069],[160,77,1,2088,"mfGuids"],[160,84,1,2095],[160,85,1,2096,"push"],[160,89,1,2088],[160,96,1,2088,"mfGuids"],[160,103,1,2095],[160,138,1,2104,"mfParam"],[160,145,1,2111],[160,146,1,2112,"guids"],[160,151,1,2095],[160,153,1,2025],[161,0,1,2119],[161,5,1,1983],[161,8,1,2121,"mfGuids"],[161,15,1,1976],[162,0,1,2129]]},"type":"js/module"}]}